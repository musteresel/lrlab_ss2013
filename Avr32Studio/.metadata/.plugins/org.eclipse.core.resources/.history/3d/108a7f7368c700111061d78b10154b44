/*
 * LR_adc.c
 */


#include "gpio.h"
#include "adc.h"

volatile avr32_adc_t *adc = &AVR32_ADC;

void LR_adc_init()
{
  static const gpio_map_t ADC_GPIO_MAP =
  {
    {AVR32_ADC_AD_5_PIN, AVR32_ADC_AD_5_FUNCTION},
    {AVR32_ADC_AD_6_PIN, AVR32_ADC_AD_6_FUNCTION},
    {AVR32_ADC_AD_7_PIN, AVR32_ADC_AD_7_FUNCTION}
  };
  gpio_enable_module(ADC_GPIO_MAP,
                     sizeof(ADC_GPIO_MAP) / sizeof(ADC_GPIO_MAP[0]));
  AVR32_ADC.mr |= 0x1 << AVR32_ADC_MR_PRESCAL_OFFSET;
  adc_configure(adc);
  adc_enable(adc,5);
  adc_enable(adc,6);
  adc_enable(adc,7);


  // lesen
  adc_start(adc);
  adc_get_value(adc, 5);
  adc_get_value(adc, 6);
  adc_get_value(adc, 7);


  // beenden
  adc_disable(adc,5);
  //...
}
